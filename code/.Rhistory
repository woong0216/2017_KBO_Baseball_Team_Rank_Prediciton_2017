746 750 757 760 762 763 776 784 785 788 790 800 802 805 807 865 869 875 889 908 927
1   1   1   1   1   2   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
> table(baseball$X2B2)
64  69  84  85  88  91 101 111 127 141 148 149 154 155 158 159 160 162 166 172 174
1   2   1   1   1   1   2   1   1   1   1   1   1   1   1   1   1   1   1   3   1
176 177 178 180 181 182 183 184 185 186 187 188 191 192 194 195 196 197 198 200 201
1   1   1   2   1   1   2   1   3   1   4   1   1   2   3   1   2   1   2   2   2
202 203 205 206 207 208 209 210 212 213 214 215 217 220 221 222 223 225 227 229 230
3   2   2   1   3   3   4   1   1   1   2   2   1   1   1   3   2   2   3   4   3
231 232 236 239 241 243 244 246 248 249 250 251 252 253 257 259 265 266 270 273 276
1   4   1   1   2   2   1   1   1   1   1   2   2   1   1   2   1   1   2   1   1
315
1
> table(baseball$SAC)
26  31  34  36  43  44  45  47  49  50  51  52  54  55  60  61  62  63  64  65  66
1   1   1   1   2   1   1   1   1   1   1   2   2   3   2   2   3   1   2   3   1
67  68  70  71  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
2   2   2   1   4   4   4   3   1   2   2   4   3   3   2   2   2   1   3   2   1
90  91  92  93  94  95  96  97  98  99 100 102 103 104 105 107 109 110 111 118 124
1   3   2   1   2   2   2   1   1   1   1   3   1   1   2   1   2   1   2   1   1
125 127 128 130 132 136 139 147 153
1   1   1   1   1   1   2   2   1
> set.seed(12345)
> baseball_rand<-baserball[order(runif(127)),]
에러: 객체 'baserball'를 찾을 수 없습니다
> baseball_rand<-baseball[order(runif(127)),]
> baseball_train<-baseball_rand[1:100,]
> baseball_test<-baseball_rand[101:127,]
> prop.table(table(baseball_train$rank))
0    1
0.75 0.25
> prop.table(table(baseball_test$rank))
0         1
0.8076923 0.1923077
> baseball_train<-baseball_rand[1:90,]
> baseball_train<-baseball_rand[91:127,]
> prop.table(table(baseball_train$rank))
0         1
0.8055556 0.1944444
> prop.table(table(baseball_test$rank))
0         1
0.8076923 0.1923077
> install.packages("C50")
‘C:/Users/user/Documents/R/win-library/3.4’의 위치에 패키지(들)을 설치합니다.
(왜냐하면 ‘lib’가 지정되지 않았기 때문입니다)
URL 'https://cran.ism.ac.jp/bin/windows/contrib/3.4/C50_0.1.0-24.zip'을 시도합니다
Content type 'application/zip' length 478481 bytes (467 KB)
downloaded 467 KB
패키지 ‘C50’를 성공적으로 압축해제하였고 MD5 sums 이 확인되었습니다
다운로드된 바이너리 패키지들은 다음의 위치에 있습니다
C:\Users\user\AppData\Local\Temp\Rtmp4a1VYt\downloaded_packages
> library(C50)
> baseball_model<-C5.0(baseball_train[-44],baseball_train$rank)
Error in C5.0.default(baseball_train[-44], baseball_train$rank) :
C5.0 models require a factor outcome
> baseball_model<-C5.0(baseball_train[-40],baseball_train$rank)
Error in C5.0.default(baseball_train[-40], baseball_train$rank) :
C5.0 models require a factor outcome
> baseball_model<-C5.0(baseball_train[-44],baseball_train$rank)
Error in C5.0.default(baseball_train[-44], baseball_train$rank) :
C5.0 models require a factor outcome
> baseball<-read.csv("c:/analysis/baseball.csv")
> baseball_model<-C5.0(baseball_train[-44],baseball_train$rank)
Error in C5.0.default(baseball_train[-44], baseball_train$rank) :
C5.0 models require a factor outcome
>
> baseball<-read.csv("c:/analysis/baseball.csv")
> str(baseball)
> baseball<-read.csv("c:/data_analysis/baseball.csv")
baseball<-read.csv("c:/data_analysis/baseball.csv")
str(baseball)
table(baseball$RBI)
table(baseball$S02)
table(baseball$R2)
table(baseball$X2B2)
table(baseball$SAC)
set.seed(12345)
baseball_rand<-baserball[order(runif(127)),]
baseball_rand<-baseball[order(runif(127)),]
baseball_rand<-baseball[order(runif(127)),]
baseball_train<-baseball_rand[1:100,]
baseball_test<-baseball_rand[101:127,]
prop.table(table(baseball_train$rank))
prop.table(table(baseball_test$rank))
baseball_train<-baseball_rand[1:90,]
baseball_train<-baseball_rand[91:127,]
baseball_test<-baseball_rand[91:127,]
prop.table(table(baseball_train$rank))
prop.table(table(baseball_test$rank))
install.packages("C50")
library(C50)
baseball_model<-C5.0(baseball_train[-44],baseball_train$rank)
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
baseball_model
baseball_model<-C5.0(baseball_train[,-2],baseball_train$rank)
prop.table(table(baseball_test$rank))
install.packages("C50")
library(C50)
baseball$rank<-factor(baseball$rank)
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
credit_model
baseball_model
credit_pred<-prdict(baseball_model,baseball_test)
credit_pred<-predict(baseball_model,baseball_test)
baseball_pred<-predict(baseball_model,baseball_test)
summary(baseball_model)
baseball_model
install.packages("C50")
baseball_train<-baseball_rand[1:90,]
baseball_test<-baseball_rand[91:127,]
prop.table(table(baseball_train$rank))
prop.table(table(baseball_test$rank))
install.packages("C50")
install.packages("C50")
library(C50)
baseball$rank<-factor(baseball$rank)
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
credit_model
baseball_model
credit_model
baseball_model
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
baseball_model
baseball$rank<-factor(baseball$rank)
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
credit_model
baseball_model
baseball<-read.csv("c:/data_analysis/baseball.csv")
str(baseball)
table(baseball$RBI)
table(baseball$S02)
table(baseball$R2)
table(baseball$X2B2)
table(baseball$SAC)
set.seed(12345)
baseball_rand<-baseball[order(runif(127)),]
baseball_rand<-baseball[order(runif(127)),]
baseball_train<-baseball_rand[1:100,]
baseball_test<-baseball_rand[101:127,]
prop.table(table(baseball_train$rank))
prop.table(table(baseball_test$rank))
baseball_train<-baseball_rand[1:90,]
baseball_test<-baseball_rand[91:127,]
prop.table(table(baseball_train$rank))
prop.table(table(baseball_test$rank))
install.packages("C50")
library(C50)
baseball$rank<-factor(baseball$rank)
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
credit_model
baseball_model
credit_pred<-prdict(baseball_model,baseball_test)
credit_pred<-predict(baseball_model,baseball_test)
baseball_pred<-predict(baseball_model,baseball_test)
summary(baseball_model)
baseball_model
install.packages("C50")
install.packages("C50")
install.packages("C50")
library(C50)
baseball$rank<-factor(baseball$rank)
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
baseball<-read.csv("c:/data_analysis/baseball.csv")
set.seed(12345)
baseball_rand<-baseball[order(runif(127)),]
baseball_rand<-baseball[order(runif(127)),]
baseball_train<-baseball_rand[1:100,]
baseball_test<-baseball_rand[101:127,]
prop.table(table(baseball_train$rank))
prop.table(table(baseball_test$rank))
baseball_train<-baseball_rand[1:90,]
library(C50)
baseball$rank<-factor(baseball$rank)
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
credit_model
baseball_model
credit_pred<-prdict(baseball_model,baseball_test)
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
baseball_model
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
credit_model
baseball_model
baseball$rank<-factor(baseball$rank)
baseball_model<-C5.0(baseball_train[-2],baseball_train$rank)
baseball_model
y
summary(baseball_model)
library(gmodels)
baseball<-read.csv("c:/data_analysis/baseball.csv")
str(야구)
table(baseball$RBI)
table(baseball$S02)
table(baseball$R2)
table(baseball$X2B2)
table(baseball$SAC)
set.seed(12345)
baseball_rand<-baseball[order(runif(127)),]
baseball_rand<-baseball[order(runif(127)),]
baseball_train<-baseball_rand[1:100,]
baseball_test<-baseball_rand[101:127,]
prop.table(table(baseball_train$rank))
prop.table(table(baseball_test$rank))
baseball_train<-baseball_rand[1:90,]
baseball_test<-baseball_rand[91:127,]
prop.table(table(baseball_train$rank))
prop.table(table(baseball_test$rank))
install.packages("C50")
library(C50)
baseball_train$rank<-as.factor(c("Yes","No"))
baseball_model<-C5.0(baseball_train[,-2],baseball_train$rank)
credit_model
baseball_model
plot(baseball_model)
credit_pred<-predict(baseball_model,baseball_test)
credit_pred<-predict(baseball_model,baseball_test)
baseball_pred<-predict(baseball_model,baseball_test)
summary(baseball_model)
baseball_model
install.packages("C50")
CrossTable(baseball_test, credit_pred, prop.chisq=FALSE, prop.c=FALSE, prop.r=FALSE, dnn=c('actual','predicted'))
CrossTable(baseball_test, baseball_pred, prop.chisq=FALSE, prop.c=FALSE, prop.r=FALSE, dnn=c('actual','predicted'))
baseball_model
CrossTable(baseball_test, baseball_pred$rank, prop.chisq=FALSE, prop.c=FALSE, prop.r=FALSE, dnn=c('actual','predicted'))
CrossTable(baseball_test$rank, baseball_pred, prop.chisq=FALSE, prop.c=FALSE, prop.r=FALSE, dnn=c('actual','predicted'))
a<-C(1,55,2,45,89)
C(1,55,2,45,89)
C(1,55,2,45,89)
1+2
2^2;2**5
pi
exp(1)
sqrt(2)
abs(-7)
ceiling(3.2)
ceiling(3.8)
p=c(1,2,3,4,5)
p
u=c("빨강", "파랑", "노랑")
u
y=seq(15)
y
z=c(1:15)
z
q=seq(-3,3,by=0.5)
q
y1=rep(6,3)
y1
-pi:pi
x=rnorm(10)
x
r1=c(1,2,1)
r2=c(3,-1,-3)
r3=c(2,3,1)
x=rbind(r1,r2,r3)
x
c1=c(1,3,2)
c2=c(2,-1,3)
c3=c(1,-3,1)
x=cbind(c1,c2,c3)
x
x=matrix(c(1,3,2,2,-1,3,1,-3,1),nrow=3)
x
x=matrix(c(1,3,2,2,-1,3,1,-3,1),ncol=3)
x
source('C:/Users/My/Desktop/rworkspace/공업통계학/1주차.R')
with(xmpo1.01,stem(temp))
with(xmp01.01,stem(temp))
install.packages("Devore7")
library(Devore7)
vignette("Devore7")
str(xmp01.01)
with(xmp01.01,summary(temp))
summary(xmp01.01$temp)
sort(xmp01.01$temp)
with(xmp01.01,stem(temp))
with(xmp01.06,stem(yardage))
with(xmp01.06,summary(yardage))
with(xmp01.06,stem(yardage))
quiz.time=c(15, 12, 13, 19, 18, 17, 16, 18, 22, 21, 11, 14, 13, 17, 17)
stripchart(quiz.time, method="stack",pch=19,main="Student Quiz Completion Time",col="Red",offset=0.5,xlab="Time (min)")
histogram(~consump, xmp01.09, xlab="Adjusted energy consumption")
with(xmp01.09, hist(consump, xlab="Adjusted energy consumption"))
densityplot(~consump, xmp01.09, xlab="Adjusted energy consumption", ylab="Density")
sort(xmp01.09$comsump)
sort(xmp01.09$consump)
y=seq(0,20,by=2)
with(xmp01.09, hist(consump, breaks=y, xlab="Adjusted energy consumption"))
densityplot(~consump, xmp01.09, xlab="Adjusted energy consumption", ylab="Density")
with(ex01.29, barplot(table(C1), horiz=TRUE))
with(ex01.29, barplot(sort(table(C1)), horiz=TRUE))
with(ex01.29, barplot(table(C1))
with(ex01.29, barplot(table(C1))
complaint
c("O", "O", "N", "J", "C", "F", "B", "B", "F", "O", "J", "O", "O", "M",
"O", "F", "F", "O", "O", "N", "O", "N", "J", "F", "J", "B", "O", "C",
"J", "O", "J", "J", "F", "N", "O", "B", "M", "O", "J", "M", "O", "B",
"O", "F", "J", "O", "O", "B", "N", "C", "O", "O", "O", "M", "B", "F",
"J", "O", "F", "N")
complaint=c("O", "O", "N", "J", "C", "F", "B", "B", "F", "O", "J", "O", "O", "M",
"O", "F", "F", "O", "O", "N", "O", "N", "J", "F", "J", "B", "O", "C",
"J", "O", "J", "J", "F", "N", "O", "B", "M", "O", "J", "M", "O", "B",
"O", "F", "J", "O", "O", "B", "N", "C", "O", "O", "O", "M", "B", "F",
"J", "O", "F", "N")
table(complaint)
barplot(table(complaint),horiz=t)
barplot(table(complaint),horiz=T)
xyplot(y~x, xmp12.01, type=c("g", "p", "r"))
plot(xmp12.01$x,xmp12.01$y)
duration <- c(62.3, 62.8, 63.6, 65.2, 65.7, 66.4, 67.4, 68.4, 68.8, 70.8, 75.7, 79.0)
summary(duration)
copper <- c(2.0, 2.4, 2.5, 2.6, 2.6, 2.7, 2.7, 2.8, 3.0, 3.1, 3.2, 3.3, 3.3, 3.4, 3.4, 3.6, 3.6, 3.6, 3.6, 3.7, 4.4, 4.6, 4.7, 4.8, 5.3, 10.1)
stem(copper)
mean(copper)
median(copper)
mean(copper, trim = 0.077)
x=c(1,2,3,4,7);x
mean(x)
x-mean(x)
(x-mean(x))^2
sum((x-mean(x))^2)/(length(x)-1)
var(x)
y=x+10
y
var(x)
var(y
var(y)
y
var(y)
z=X*2
z=x*2
var(z)
var(z)/var(X)
var(z)/var(x)
bwplot(~C1, xmp01.18, xlab = "Pulse widths")
with(xmp10.01, boxplot(C1 ~ as.factor(C2), horizontal=T))
x=8.87  4.98  11.23  21.03  10.33  -4.03    9.70   7.67   11.64   1.73
27(38-17)
27*(38-17)
ln(14^7)
log(14^7)
log10(14^7)
27*(38-17)
log10(14^7)
sqrt(436/12)
sqrt(4)
a=seq(5,160, by=5)
a
b=seq(87,56, by=-1)
a*b
d=a*b
d
d[19,20,21]
d[19:21]
a%*%b
sum(d)
median(d)
sd(d)
var(d)
a=matrix(c(7,2,9,4,12,13),ncol=2)
a
a=matrix(c(7,2,9,4,12,13),nrow=2)
a
first=matrix(c(7,2,9,4,12,13),nrow=2)
first
second(matrix(c(1,2,3,7,8,9,12,13,14,19,20,21),nrow=3))
second
b(matrix(c(1,2,3,7,8,9,12,13,14,19,20,21),nrow=3))
b=(matrix(c(1,2,3,7,8,9,12,13,14,19,20,21),nrow=3))
b
a%*%b
1)	traffic <- read.csv("http://www.stat.berkeley.edu/classes/s133/data/flow-occ.csv")
traffic <- read.csv("http://www.stat.berkeley.edu/classes/s133/data/flow-occ.csv")
traffic
traffic <- read.csv("C:\\data\\flow-occ.csv ")
traffic <- read.csv("C:\\data\\flow-occ.csv ")
traffic <- read.csv("C:\\data\\flow-occ.csv ")
traffic <- read.csv("http://www.stat.berkeley.edu/classes/s133/data/flow-occ.csv")
traffic
traffic$timestamp
traffic$Lane.1.Occ(mean)
mean(traffic$Lane.1.Occ)
sd(traffic$Lane.1.Occ)
mean(traffic$Lane.1.Flow)
sd(traffic$Lane.1.Flow)
mean(traffic$Lane.1.Flow)
sd(traffic$Lane.1.Flow)
mean(traffic$Lane.2.Occ)
sd(traffic$Lane.2.Occ)
mean(traffic$Lane.2.Flow)
sd(traffic$Lane.2.Flow)
mean(traffic$Lane.3.Occ)
sd(traffic$Lane.3.Occ)
mean(traffic$Lane.3.Flow)
sd(traffic$Lane.3.Flow)
hist(traffic$Lane.1.Flow,traffic$Lane.2.Flow,traffic$Lane.3.Flow)
hist(traffic$Lane.1.Flow)
hist(traffic$Lane.2.Flow)
hist(traffic$Lane.3.Flow)
boxplot(traffic$Lane.1.Flow)
boxplot(traffic$Lane.2.Flow)
boxplot(traffic$Lane.3.Flow)
27*(38-17)
log10(14^7)
sqrt(436/12)
a=seq(5,160, by=5)
b=seq(87,56, by=-1)
d=a*b
a=seq(5,160, by=5)
b=seq(87,56, by=-1)
a
b
d=a*b
d
d[19:21]
a%*%b
sum(d)
median(d)
sd(d)
a=matrix(c(7,2,9,4,12,13),nrow=2)
a
b=(matrix(c(1,2,3,7,8,9,12,13,14,19,20,21),nrow=3))
b
a%*%b
traffic <- read.csv("http://www.stat.berkeley.edu/classes/s133/data/flow-occ.csv")
traffic
traffic <- read.csv("C:\\data\\flow-occ.csv ")
traffic <- read.csv("http://www.stat.berkeley.edu/classes/s133/data/flow-occ.csv")
traffic <- read.csv("C:\\data\\flow-occ.csv ")
mean(traffic$Lane.1.Occ)
mean(traffic$Lane.1.Occ)
traffic <- read.csv("http://www.stat.berkeley.edu/classes/s133/data/flow-occ.csv")
traffic
mean(traffic$Lane.1.Occ)
sd(traffic$Lane.1.Occ)
mean(traffic$Lane.1.Flow)
sd(traffic$Lane.1.Flow)
mean(traffic$Lane.2.Occ)
sd(traffic$Lane.2.Occ)
mean(traffic$Lane.2.Flow)
sd(traffic$Lane.2.Flow)
mean(traffic$Lane.3.Occ)
sd(traffic$Lane.3.Occ)
mean(traffic$Lane.3.Flow)
sd(traffic$Lane.3.Flow)
hist(traffic$Lane.1.Flow)
hist(traffic$Lane.2.Flow)
hist(traffic$Lane.3.Flow)
boxplot(traffic$Lane.1.Flow)
boxplot(traffic$Lane.2.Flow)
boxplot(traffic$Lane.3.Flow)
hist(traffic$Lane.1.Flow)
Lane.2.Flow
hist(traffic$Lane.2.Flow)
hist(traffic$Lane.3.Flow)
boxplot(traffic$Lane.1.Flow)
boxplot(traffic$Lane.2.Flow)
boxplot(traffic$Lane.3.Flow)
pbirthday(72)
prob=1
for(i in 0:71){
prob = prob*(365-i)/365
}
print(1-prob)
for(i in 1:100) {
sum = sum+i
}
for(i in 1:100) {
sum = sum+i
}
print(sum)
sum=0
for(i in 1:100) {
sum = sum+i
}
print(sum)
sum=0
for(i in 1:10) {
sum = sum+i
}
print(sum)
factorial(3)
factorial(4)
choose(53,6)
factorial(53)/factorial(6)/factorial(47)
pbirthday(365)
pbirthday(364)
pbirthday(363)
pbirthday(360)
pbirthday(34)
pbirthday(180)
pbirthday(100)
prob=1
for(i in 0:71){
prob = prob*(365-i)/365
}
print(1-prob)
pbirthday(72)
setwd("C:/Users/My/Desktop/2017-2/통계의 활용/과제")
read.csv("연습문제.csv")
연습문제<-read.csv("연습문제.csv")
plot(x=연습문제$미분방정식,y=연습문제$통계학)
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100))
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100))
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100),col="blue")
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100),col="blue",offset=1)
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100),col="blue",lwd=1)
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100),col="blue",lwd=1)
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100),col="blue",lwd=10)
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100),col="blue",lwd=5)
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100),col="blue",lwd=3)
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100),col="blue",lwd=1)
plot(x=연습문제$미분방정식,y=연습문제$통계학,xlim=c(0,100),ylim=c(0,100),xlab="미분방정식",ylab="통계학",col="blue",lwd=1)
